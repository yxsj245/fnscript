name: pack-linux-dashboard

on:
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      CODE_NAME: SystemDashboard # 定义文件名 
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8" ]

    steps:
    # 签出代码
    - uses: actions/checkout@v4
    
    - name: 设置Python ${{ matrix.python-version }} 环境
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # Step 2: 配置缓存
    - name: 缓存 pip 依赖
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        python -m pip install pyinstaller==5.13.2
        python -m pip install textual psutil

    - name: 打包项目
      run: |
        # 列出当前目录文件确认内容
        ls -la
        # 打包主程序并包含所有需要的文件
        pyinstaller -F dashboard.py \
          --name "${{ env.CODE_NAME }}" \
          --clean \
          --runtime-tmpdir /tmp

    - name: 检查打包输出
      run: |
        # 列出dist目录内容，确认打包输出文件名
        ls -la dist
        # 列出build目录内容，用于调试
        ls -la build

    - name: 上传可执行文件
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.CODE_NAME }}
        path: dist/${{ env.CODE_NAME }}
